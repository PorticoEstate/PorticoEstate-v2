# Base image
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps

# In case of firewall/proxy
RUN if [ -n "${http_proxy}" ]; then \
 sed -i 's/https/http/' /etc/apk/repositories; \
fi

#RUN sed -i 's/https/http/' /etc/apk/repositories

RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci; \
  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i --frozen-lockfile; \
  else echo "Lockfile not found." && exit 1; \
  fi

# Rebuild the source code only for production
FROM base AS builder
ARG NEXT_ENV=production
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY ./src ./src
COPY ./public ./public
COPY ./.env ./.env
COPY ./next.config.mjs ./next.config.mjs
COPY ./tsconfig.json ./tsconfig.json
COPY ./yarn.lock ./yarn.lock
COPY ./package.json ./package.json

# Only build in production mode
RUN \
  if [ "$NEXT_ENV" = "production" ]; then \
    if [ -f yarn.lock ]; then yarn run build; \
    elif [ -f package-lock.json ]; then npm run build; \
    elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm run build; \
    else echo "Lockfile not found." && exit 1; \
    fi; \
  else \
    echo "Skipping build in development mode"; \
  fi




# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
# Uncomment the following line in case you want to disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public

# Only copy the .next files for production mode
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV NEXT_ENV=${NEXT_ENV:-production}


CMD ["node", "server.js"]