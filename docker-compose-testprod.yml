## istructions to build the image ##
# export INSTALL_MSSQL=true
# export INSTALL_XDEBUG=true
# export INSTALL_ORACLE=true
# docker compose build

x-common-variables: &common-variables
    NEXT_ENV: ${NEXT_ENV:-production}
    NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-}
    NEXT_INTERNAL_API_URL: ${NEXT_INTERNAL_API_URL:-http://slim}

volumes:
    logs:
        driver: local
    redis_data:
        driver: local
services:
    slim:
        container_name: ${SLIM_HOST:-portico_api}
        #   image: sigurdne/portico_estate_webserver:latest
        build:
            context: .
            dockerfile: Dockerfile
            args:
                INSTALL_MSSQL: ${INSTALL_MSSQL:-false}
                INSTALL_XDEBUG: ${INSTALL_XDEBUG:-false}
                INSTALL_ORACLE: ${INSTALL_ORACLE:-false}
                http_proxy: ${http_proxy}
                https_proxy: ${https_proxy}
        working_dir: /var/www/html
        environment:
            <<: *common-variables
            NEXTJS_HOST: ${NEXTJS_HOST:-nextjs}
            SLIM_HOST: ${SLIM_HOST:-portico_api}
            docker: "true"
            REDIS_HOST: redis
            REDIS_PORT: 6379
        ports:
            - "8088:80"
        volumes:
            - .:/var/www/html
            - ./logs:/var/log/apache2
            - /var/local/:/var/local/
            # developement: store your files in '/var/local/phpgw/<domain>/tmp' and '/var/local/phpgw/<domain>/files'
        networks:
            - default
            - shared_network
            - internal
        extra_hosts:
            - "host.docker.internal:host-gateway"
        depends_on:
            - redis
            - websocket

    websocket:
        container_name: portico_websocket
        build:
            context: .
            dockerfile: Dockerfile.websocket
        working_dir: /var/www/html
        environment:
            docker: "true"
            REDIS_HOST: redis
            REDIS_PORT: 6379
            NEXT_ENV: ${NEXT_ENV:-production}
#        ports:
#            - "8080:8080"  # WebSocket port
        volumes:
            - .:/var/www/html
            - ./logs:/var/log/websocket
        depends_on:
            - redis
        networks:
            - default
            - shared_network
            - internal

    redis:
        image: redis:alpine
        container_name: portico_redis
        restart: unless-stopped
#        ports:
#            - "6379:6379"
        volumes:
            - redis_data:/data
        networks:
            - default
            - internal
        command: redis-server --appendonly yes

    nextjs:
        hostname: ${NEXTJS_HOST:-nextjs}
        build:
            dockerfile: ./src/modules/bookingfrontend/client/Dockerfile.nextjs
            args:
                - NEXT_ENV=${NEXT_ENV:-production}
                - http_proxy=${http_proxy}
                - https_proxy=${https_proxy}
        environment:
            <<: *common-variables
        networks:
            - internal

networks:
    shared_network:
        external: true
    internal:
        name: portico_internal
