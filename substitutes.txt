use App\Database\Db;
$GLOBALS['phpgw']->db
Db::getInstance()


use App\modules\phpgwapi\services\Settings;
$serverSettings = Settings::getInstance()->get('server');
$userSettings = Settings::getInstance()->get('user');
$flags = Settings::getInstance()->get('flags');
$apps = Settings::getInstance()->get('apps');
$hook_values = Settings::getInstance()->get('hook_values');

Settings::getInstance()->set('flags', $this->flags);

Settings::getInstance()->update('flags', ['app_header' => $this->flags['app_header']]);
Settings::getInstance()->update('flags', ['menu_selection' => $this->flags['menu_selection']]);


hÃ¥ndtert sentralt i phpGW
//use App\modules\phpgwapi\services\Preferences;
//$Preferences = Preferences::getInstance();

use App\modules\phpgwapi\controllers\Applications;


$GLOBALS['phpgw_info']['user']
$this->userSettings

use App\modules\phpgwapi\security\Acl;
$this->acl = Acl::getInstance();

$GLOBALS['phpgw']->acl
$this->acl

PHPGW_ACL_
ACL_

use App\modules\phpgwapi\services\Cache;
phpgwapi_cache
Cache

$GLOBALS['phpgw']->link
phpgw::link

$GLOBALS['phpgw']->redirect_link
phpgw::redirect_link


phpgw::get_var
Sanitizer::get_var

phpgw::clean_value
Sanitizer::clean_value

use App\modules\phpgwapi\controllers\Locations;
$location_obj = new Locations();


$GLOBALS['phpgw']->css->
phpgwapi_css::getInstance()->

$GLOBALS['phpgw']->js->
phpgwapi_js::getInstance()->

phpgwapi_js::getInstance()->add_code('', $code);



$GLOBALS['phpgw']->xslttpl->add_file
phpgwapi_xslttemplates::getInstance()->add_file

$GLOBALS['phpgw']->xslttpl->set_var
phpgwapi_xslttemplates::getInstance()->set_var


use App\modules\phpgwapi\services\Config;
$this->config = new Config();


use App\modules\phpgwapi\services\SchemaProc\SchemaProc;
$this->oProc = new SchemaProc();


$GLOBALS['phpgw']->common
$this->phpgwapi_common = new \phpgwapi_common();


use App\modules\phpgwapi\services\Log;
$log = new Log();

use App\modules\phpgwapi\controllers\Accounts\Accounts;
$accounts_obj = new Accounts();


use App\modules\phpgwapi\controllers\Accounts\phpgwapi_group;
use App\modules\phpgwapi\controllers\Accounts\phpgwapi_user;

use App\modules\phpgwapi\services\Hooks;

$GLOBALS['phpgw']->strip_html
phpgw::strip_html

use App\modules\phpgwapi\services\Translation;
$translation = Translation::getInstance();

PHPGW_ACL_READ
ACL_READ

PHPGW_ACL_PRIVATE
ACL_PRIVATE


$GLOBALS['phpgw']->session->is_repost()
phpgw::is_repost()

use App\modules\phpgwapi\security\Sessions;
$sessions = Sessions::getInstance();

use App\modules\phpgwapi\services\AsyncService;
$asyncservice = AsyncService::getInstance();


use App\helpers\Template;
$template = Template::getInstance(PHPGW_TEMPLATE_DIR);


use App\modules\bookingfrontend\helpers\UserHelper;
createObject('bookingfrontend.bouser')
$bouser = new UserHelper();

use App\modules\booking\services\WebhookManager;
$webhookManager = new WebhookManager();

use App\modules\booking\services\WebhookNotifier;
$webhookNotifier = new WebhookNotifier();