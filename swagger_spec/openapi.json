{
    "openapi": "3.0.0",
    "info": {
        "title": "Portico API",
        "description": "Portico API",
        "contact": {
            "email": "sigurdne@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http:\/\/localhost:8080"
        }
    ],
    "paths": {
        "\/bookingfrontend\/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get authenticated user details",
                "operationId": "5c8f77c2dd04c8c2470b745bbb7e8f72",
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated"
                    }
                }
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update user details",
                "operationId": "a4a75223d438bac3cdd0444b72ac22c9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "homepage": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "street": {
                                        "type": "string"
                                    },
                                    "zip_code": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#\/components\/schemas\/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "User not authenticated"
                    },
                    "403": {
                        "description": "Forbidden - Cannot update other users"
                    }
                }
            }
        },
        "\/bookingfrontend\/user\/messages": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get system messages for the current user",
                "operationId": "f845ac54d0ebe83d7a44b2d33e6034f8",
                "responses": {
                    "200": {
                        "description": "System messages",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "type": {
                                                "description": "Message type (error, success, info, warning)",
                                                "type": "string"
                                            },
                                            "text": {
                                                "description": "Message text",
                                                "type": "string"
                                            },
                                            "title": {
                                                "description": "Optional message title",
                                                "type": "string"
                                            },
                                            "class": {
                                                "description": "CSS class for styling",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/user\/messages\/test": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Create a test message with a title",
                "operationId": "4ce0a2c62063698abc9f52d8ceb4921b",
                "responses": {
                    "200": {
                        "description": "Test message created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/user\/session": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get current user's session ID",
                "operationId": "bbfe1de292690754b661df09195bfcb4",
                "responses": {
                    "200": {
                        "description": "Session ID successfully retrieved",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "sessionId": {
                                            "description": "The current session ID",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated"
                    }
                }
            }
        },
        "\/bookingfrontend\/user\/messages\/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a specific message by ID",
                "operationId": "6c26604ad50227502b5b6a10f183ee8e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the message to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/towns": {
            "get": {
                "tags": [
                    "Towns"
                ],
                "summary": "Get a list of all towns",
                "operationId": "d8fa7a07fbf3e4d43464989adcdd4360",
                "responses": {
                    "200": {
                        "description": "A list of towns with id and name",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/buildings": {
            "get": {
                "tags": [
                    "Buildings"
                ],
                "summary": "Get a list of all buildings",
                "operationId": "92e88be22288b82cbaff0716a1854251",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting index for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of buildings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Building"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/buildings\/{id}": {
            "get": {
                "tags": [
                    "Buildings"
                ],
                "summary": "Get a specific building by ID",
                "operationId": "5b22b9f0d2dcf99e6b7cb5db4003376c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the building to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Building details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Building"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Building not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/buildings\/{id}\/agegroups": {
            "get": {
                "tags": [
                    "Buildings"
                ],
                "summary": "Get age groups for a building's activities",
                "operationId": "f7b29cbceff813085c9d557efd62745a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the building",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of age groups",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/AgeGroup"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Building not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/buildings\/{id}\/audience": {
            "get": {
                "tags": [
                    "Buildings"
                ],
                "summary": "Get target audience for a building's activities",
                "operationId": "5fa31a26b632170f5dfe8a9b96dfe686",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the building",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of target audiences",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Audience"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Building not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/buildings\/{id}\/seasons": {
            "get": {
                "tags": [
                    "Buildings"
                ],
                "summary": "Get seasons for a building",
                "operationId": "567ef49b9d4a15a530ccb947f3352c63",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the building",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Start date (defaults to today)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-03-17T00:00:00+01:00"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "End date (optional)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-06-17T23:59:59+02:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of seasons with associated resources and boundaries",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Season"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Building not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Building not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/completedreservations": {
            "get": {
                "tags": [
                    "CompletedReservations"
                ],
                "summary": "Get completed reservations for the current user",
                "operationId": "fe139ae2c5f374c9f873edde0de28ca5",
                "responses": {
                    "200": {
                        "description": "List of completed reservations",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/CompletedReservation"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated"
                    }
                }
            }
        },
        "\/bookingfrontend\/searchdataall": {
            "get": {
                "tags": [
                    "Search Data"
                ],
                "summary": "Get various search data",
                "operationId": "6c965589d8280230d7be6ace902a47f7",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "activities": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Activity"
                                            }
                                        },
                                        "buildings": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Building"
                                            }
                                        },
                                        "building_resources": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/BuildingResource"
                                            }
                                        },
                                        "facilities": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Facility"
                                            }
                                        },
                                        "resources": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Resource"
                                            }
                                        },
                                        "resource_activities": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ResourceActivity"
                                            }
                                        },
                                        "resource_facilities": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ResourceFacility"
                                            }
                                        },
                                        "resource_categories": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ResourceCategory"
                                            }
                                        },
                                        "resource_category_activity": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ResourceCategoryActivity"
                                            }
                                        },
                                        "towns": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Town"
                                            }
                                        },
                                        "organizations": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Organization"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get all organizations",
                "operationId": "cb650d9c5263cfa93b7f6340688be4a1",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "organizations": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Organization"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Create a new organization",
                "operationId": "a60db003ce06afd9da2c9f52c05cb906",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "organization_number"
                                ],
                                "properties": {
                                    "organization_number": {
                                        "description": "Norwegian organization number",
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "activity_id": {
                                        "type": "integer"
                                    },
                                    "contacts": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Organization created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "\/bookingfrontend\/availableresources": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get resources with at least a 30 minute availability for a specific date",
                "description": "Get resources that have at least a 30 minute opening on the specified date",
                "operationId": "ebb5430ffa8feacefd10ba1ab34ed2ca",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date to check (YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "debug",
                        "in": "query",
                        "description": "Enable debug mode to see why resources were excluded",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "resources": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            }
                                        },
                                        "debug_info": {
                                            "description": "Only present when debug=true",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid date format",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/{ownertype}\/{id}\/documents": {
            "get": {
                "tags": [
                    "Buildings",
                    "Resources"
                ],
                "summary": "Get documents for a specific owner",
                "operationId": "4f262c0bfa886438b40668f01d87d066",
                "parameters": [
                    {
                        "name": "ownertype",
                        "in": "path",
                        "description": "Type of the owner (buildings or resources)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "buildings",
                                "resources"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the owner",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of documents to retrieve. Can be 'images' for all image types, or specific document categories. Multiple types can be comma-separated.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "images,regulation,price_list"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of documents",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Document"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/documents\/{id}\/download": {
            "get": {
                "tags": [
                    "Buildings"
                ],
                "summary": "Download a specific document",
                "operationId": "285ff88cb73536774cf3bcda871583b3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document to download",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document file",
                        "headers": {
                            "Content-Type": {
                                "description": "MIME type of the document",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Content-Disposition": {
                                "description": "Attachment with filename",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/events\/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get a specific event by ID",
                "operationId": "5e575740ae141410a6e69c719c8699fe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested event",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Event"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No active session"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Events"
                ],
                "summary": "Partially update an Event",
                "operationId": "b21ac3fc92f771c97010b01861a8a3fe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Event to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "from_": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "to_": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "organizer": {
                                        "type": "string"
                                    },
                                    "participant_limit": {
                                        "type": "integer"
                                    },
                                    "resource_ids": {
                                        "description": "Complete replacement of resources",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No active session"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/events\/upcoming": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get upcoming events",
                "description": "Returns a list of upcoming events with optional filters",
                "operationId": "c4e0d22b26b7f6128da4586428d1c644",
                "parameters": [
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "Filter events from this date (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "Filter events up to this date (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "buildingId",
                        "in": "query",
                        "description": "Filter events by building ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "facilityTypeId",
                        "in": "query",
                        "description": "Filter events by facility type ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "loggedInOnly",
                        "in": "query",
                        "description": "When true, shows only events for the logged-in organization. When false or not specified, shows both public events and logged-in organization's events.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Pagination start",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Pagination limit",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of upcoming events",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Event"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/organizations\/{id}\/events": {
            "get": {
                "tags": [
                    "Events",
                    "Organizations"
                ],
                "summary": "Get events for a specific organization",
                "description": "Returns a list of events for the specified organization",
                "operationId": "cd38bde9cba055634b4dd3e772be11fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Organization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "Filter events from this date (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "Filter events up to this date (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Pagination start",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Pagination limit",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of organization events",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Event"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/auth\/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Initialize anonymous session",
                "description": "Creates anonymous session using configured credentials",
                "operationId": "c6b25fbbf4338cea02ab1982f159efcb",
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "sessionId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/auth\/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout current session",
                "description": "Destroys current session and handles external logout",
                "operationId": "7907066fe44ccad20dcd80bbf9dabb74",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Whether logout was successful",
                                            "type": "boolean"
                                        },
                                        "external_logout_url": {
                                            "description": "URL for external logout if configured",
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/multi-domains": {
            "get": {
                "tags": [
                    "MultiDomain"
                ],
                "summary": "Get all multi domain values",
                "operationId": "5ff8cfb6d1cc8b83aa4e9381911d4a29",
                "responses": {
                    "200": {
                        "description": "List of multi domain values",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/MultiDomain"
                                            }
                                        },
                                        "total_records": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "\/bookingfrontend\/multi-domains\/{id}": {
            "get": {
                "tags": [
                    "MultiDomain"
                ],
                "summary": "Get a specific multi domain by ID",
                "operationId": "21190de0e375a0e33c6a0d775a83856f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Multi Domain ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Multi domain details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/MultiDomain"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Multi domain not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "\/bookingfrontend\/organizations\/lookup\/{number}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Look up organization details from Br\u00f8nn\u00f8ysund Register",
                "operationId": "1e04afc10d8dbc01a5c9b50f7e85bf47",
                "parameters": [
                    {
                        "name": "number",
                        "in": "path",
                        "description": "Norwegian organization number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d{9}$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization details found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "navn": {
                                            "type": "string"
                                        },
                                        "organisasjonsnummer": {
                                            "type": "string"
                                        },
                                        "hjemmeside": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "postadresse": {
                                            "properties": {
                                                "adresse": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "postnummer": {
                                                    "type": "string"
                                                },
                                                "poststed": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/organizations\/{id}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get a specific organization by ID",
                "operationId": "81a628b1ca050a758617dc1c14c39cf0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Organization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Organization"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Update an organization's details",
                "operationId": "3b0c16731efc9517d2a18542bb092997",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Organization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "homepage": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Organization updated successfully"
                    },
                    "403": {
                        "description": "Not authorized to modify this organization"
                    }
                },
                "security": [
                    {
                        "oidc": []
                    }
                ]
            }
        },
        "\/bookingfrontend\/organizations\/{id}\/delegates": {
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Add a delegate to an organization",
                "operationId": "03e7d2851ab872fc44d5d82dd3828df8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Organization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "ssn"
                                ],
                                "properties": {
                                    "ssn": {
                                        "description": "Norwegian social security number",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Delegate added successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "403": {
                        "description": "Not authorized to add delegates to this organization"
                    }
                },
                "security": [
                    {
                        "oidc": []
                    }
                ]
            }
        },
        "\/bookingfrontend\/organizations\/my": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get organizations for authenticated user",
                "operationId": "e65dc84ab4169ade1e0ca7167956b2b6",
                "responses": {
                    "200": {
                        "description": "List of organizations",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "organization_number": {
                                                        "type": "string"
                                                    },
                                                    "is_delegate": {
                                                        "type": "boolean"
                                                    },
                                                    "active": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "total_records": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authenticated"
                    }
                },
                "security": [
                    {
                        "oidc": []
                    }
                ]
            }
        },
        "\/bookingfrontend\/organizations\/list": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get paginated list of organizations for select2",
                "operationId": "b70723dc3224e3894f2e3b0eb9fa4c45",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of organizations",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "text": {
                                                        "type": "string"
                                                    },
                                                    "disabled": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "organization_number": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "more": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/resources": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get a list of active and visible resources",
                "operationId": "cfe261b62d6acba90bda3450f03e9b93",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Start index for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "short",
                        "in": "query",
                        "description": "If set to 1, returns only a subset of fields",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "dir",
                        "in": "query",
                        "description": "Sort direction (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of active and visible resources",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "total_records": {
                                            "type": "integer"
                                        },
                                        "start": {
                                            "type": "integer"
                                        },
                                        "sort": {
                                            "type": "string"
                                        },
                                        "dir": {
                                            "type": "string"
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Resource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/resources\/{id}": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get a specific resource by ID",
                "operationId": "16fd0d48e0161c72239513f54564fc3f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the resource to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested resource",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Resource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/buildings\/{id}\/resources": {
            "get": {
                "tags": [
                    "Buildings",
                    "Resources"
                ],
                "summary": "Get a list of active and visible resources for a specific building",
                "operationId": "766f5f184244090509898be2a7b67fb0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the building",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Start index for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "short",
                        "in": "query",
                        "description": "If set to 1, returns only a subset of fields",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dir",
                        "in": "query",
                        "description": "Sort direction (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of active and visible resources for the specified building",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "total_records": {
                                            "type": "integer"
                                        },
                                        "start": {
                                            "type": "integer"
                                        },
                                        "sort": {
                                            "type": "string"
                                        },
                                        "dir": {
                                            "type": "string"
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Resource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Building not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/applications\/{id}\/schedule": {
            "get": {
                "tags": [
                    "Schedule Entities"
                ],
                "summary": "Get schedule entities for an application",
                "operationId": "13356a00732bae50418b5140f02e963f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Application ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule entities for the application",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "events": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "allocations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "bookings": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "\/bookingfrontend\/buildings\/{id}\/schedule": {
            "get": {
                "tags": [
                    "Schedule Entities"
                ],
                "summary": "Get schedules for a single date or multiple weeks",
                "operationId": "6780e41d638acebfd360eeae3f8fc0d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Building ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Single date to get schedule for (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-03-17"
                        }
                    },
                    {
                        "name": "dates[]",
                        "in": "query",
                        "description": "Array of dates to get schedules for (overrides single date if both provided)",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date",
                                "example": "2025-03-17"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Building schedules mapped by week start date",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "Weekly schedule array keyed by week start date (Monday)",
                                        "type": "array",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#\/components\/schemas\/Event"
                                                },
                                                {
                                                    "$ref": "#\/components\/schemas\/Booking"
                                                },
                                                {
                                                    "$ref": "#\/components\/schemas\/Allocation"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid date format"
                    },
                    "404": {
                        "description": "Building not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "\/bookingfrontend\/resources\/{id}\/schedule": {
            "get": {
                "tags": [
                    "Schedule Entities"
                ],
                "summary": "Get a schedule for a specific resource within a date range",
                "operationId": "672960dbb30a49b124bb5d423b9aa34b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for the schedule (format: YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-03-17"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for the schedule (format: YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-03-24"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource schedule for the specified date range",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/Event"
                                            },
                                            {
                                                "$ref": "#\/components\/schemas\/Booking"
                                            },
                                            {
                                                "$ref": "#\/components\/schemas\/Allocation"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid date format or missing parameters"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "\/bookingfrontend\/version": {
            "get": {
                "tags": [
                    "Version"
                ],
                "summary": "Get current version preference",
                "description": "Gets the user's current version preference (original or new)",
                "operationId": "acf7e14724a98d93cb7b3e65a26d256e",
                "responses": {
                    "200": {
                        "description": "Current version settings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "version": {
                                            "type": "string"
                                        },
                                        "template_set": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Version"
                ],
                "summary": "Set version preference",
                "description": "Sets the user's preferred version (original or new)",
                "operationId": "b2d412d5289c83b1fa9577a652ab41bf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "version"
                                ],
                                "properties": {
                                    "version": {
                                        "description": "The version to set (original or new)",
                                        "type": "string",
                                        "example": "new"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Version preference set successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "version": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid version specified",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/applications\/partials": {
            "get": {
                "tags": [
                    "Applications"
                ],
                "summary": "Get partial applications for the current session",
                "operationId": "45d30bba8cbe9b4542ece91361d2d893",
                "responses": {
                    "200": {
                        "description": "List of partial applications",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Application"
                                            }
                                        },
                                        "total_sum": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Applications"
                ],
                "summary": "Create a new partial application",
                "operationId": "b14c7c2bfc12f90b22f62c55860967a0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Application"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Partial application created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or missing session"
                    }
                }
            }
        },
        "\/bookingfrontend\/applications": {
            "get": {
                "tags": [
                    "Applications"
                ],
                "summary": "Get all applications for the current user",
                "operationId": "9352778c5f5257088d7bef95d6486e7b",
                "parameters": [
                    {
                        "name": "include_organizations",
                        "in": "query",
                        "description": "Include applications from organizations the user belongs to",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of applications",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Application"
                                            }
                                        },
                                        "total_sum": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated"
                    }
                }
            }
        },
        "\/bookingfrontend\/applications\/{id}": {
            "get": {
                "tags": [
                    "Applications"
                ],
                "summary": "Get a specific application by ID",
                "description": "Returns a specific application if the user has access to it, or if the correct secret is provided.",
                "operationId": "0f26ee05a3a903fa7c9100ba23ba0e1f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the application to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "secret",
                        "in": "query",
                        "description": "Secret key that can be used to access the application without authentication",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Application"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to view this application"
                    },
                    "404": {
                        "description": "Application not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Applications"
                ],
                "summary": "Delete a partial application",
                "operationId": "2f15f1feb0c3890cc743411d56ed5fee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the application to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application successfully deleted",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "deleted": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Application not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/applications\/partials\/{id}": {
            "put": {
                "tags": [
                    "Applications"
                ],
                "summary": "Replace an existing partial application",
                "operationId": "3e826185dacd8fcf2bc8d912e7d754dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Application"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application updated successfully"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Applications"
                ],
                "summary": "Partially update an application",
                "operationId": "96437259cb1d3b69903d9ab457693382",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the application to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "contact_name": {
                                        "type": "string"
                                    },
                                    "contact_email": {
                                        "type": "string"
                                    },
                                    "contact_phone": {
                                        "type": "string"
                                    },
                                    "resources": {
                                        "description": "Complete replacement of resources",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "dates": {
                                        "description": "Update existing dates (with id) or create new ones (without id)",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "from_": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "to_": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "articles": {
                                        "description": "Complete replacement of articles",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "Article mapping ID",
                                                    "type": "integer"
                                                },
                                                "quantity": {
                                                    "description": "Quantity ordered",
                                                    "type": "integer"
                                                },
                                                "parent_id": {
                                                    "description": "Optional parent mapping ID for sub-items",
                                                    "type": "integer",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Application not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/applications\/{id}\/documents": {
            "post": {
                "tags": [
                    "Applications"
                ],
                "summary": "Upload documents for an application",
                "description": "Upload one or more documents to an application. Only the application owner or delegates can upload documents.",
                "operationId": "814378deec3bab08531e472d5ebd30d3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the application",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "files[]": {
                                        "description": "The files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Documents successfully uploaded",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "document_ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No files provided"
                    },
                    "403": {
                        "description": "Unauthorized to upload documents to this application"
                    },
                    "404": {
                        "description": "Application not found"
                    }
                },
                "security": [
                    {
                        "oidc": []
                    }
                ]
            }
        },
        "\/bookingfrontend\/applications\/document\/{id}": {
            "delete": {
                "tags": [
                    "Applications"
                ],
                "summary": "Delete a document from an application",
                "description": "Delete a specific document. Only the application owner or delegates can delete documents.",
                "operationId": "36977329717883677fb00391afce7a0a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Document successfully deleted"
                    },
                    "403": {
                        "description": "Unauthorized to delete this document"
                    },
                    "404": {
                        "description": "Document or associated application not found"
                    }
                },
                "security": [
                    {
                        "oidc": []
                    }
                ]
            }
        },
        "\/bookingfrontend\/applications\/simple": {
            "post": {
                "tags": [
                    "Applications"
                ],
                "summary": "Create a simple application booking for a specific timeslot",
                "operationId": "b9ac3ff006e7b096aea109f71346e630",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "resource_id",
                                    "building_id",
                                    "from",
                                    "to"
                                ],
                                "properties": {
                                    "resource_id": {
                                        "type": "integer"
                                    },
                                    "building_id": {
                                        "type": "integer"
                                    },
                                    "from": {
                                        "description": "Start timestamp in seconds",
                                        "type": "integer"
                                    },
                                    "to": {
                                        "description": "End timestamp in seconds",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Simple application created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or timeslot unavailable"
                    }
                }
            }
        },
        "\/bookingfrontend\/applications\/articles": {
            "get": {
                "tags": [
                    "Applications"
                ],
                "summary": "Get available articles for resources",
                "operationId": "4c58526cbe765339909913bb2ccb692d",
                "parameters": [
                    {
                        "name": "resources[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of articles",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/bookingfrontend\/applications\/partials\/checkout": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Update and finalize all partial applications with contact and organization info",
                "operationId": "f43a4e0ee3d5db43044601978f98865e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "customerType",
                                    "contactName",
                                    "contactEmail",
                                    "contactPhone"
                                ],
                                "properties": {
                                    "customerType": {
                                        "type": "string",
                                        "enum": [
                                            "ssn",
                                            "organization_number"
                                        ]
                                    },
                                    "organizationNumber": {
                                        "type": "string"
                                    },
                                    "organizationName": {
                                        "type": "string"
                                    },
                                    "contactName": {
                                        "type": "string"
                                    },
                                    "contactEmail": {
                                        "type": "string"
                                    },
                                    "contactPhone": {
                                        "type": "string"
                                    },
                                    "street": {
                                        "type": "string"
                                    },
                                    "zipCode": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "organizerName": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Applications updated successfully"
                    }
                }
            }
        },
        "\/bookingfrontend\/applications\/validate-checkout": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Validate if checkout of partial applications would succeed",
                "operationId": "15cfb90e2e707e6fb68b3efde9a11b2e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "customerType",
                                    "contactName",
                                    "contactEmail",
                                    "contactPhone"
                                ],
                                "properties": {
                                    "customerType": {
                                        "type": "string",
                                        "enum": [
                                            "ssn",
                                            "organization_number"
                                        ]
                                    },
                                    "organizationNumber": {
                                        "type": "string"
                                    },
                                    "organizationName": {
                                        "type": "string"
                                    },
                                    "contactName": {
                                        "type": "string"
                                    },
                                    "contactEmail": {
                                        "type": "string"
                                    },
                                    "contactPhone": {
                                        "type": "string"
                                    },
                                    "street": {
                                        "type": "string"
                                    },
                                    "zipCode": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "eventTitle": {
                                        "type": "string"
                                    },
                                    "organizerName": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Validation results",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "valid": {
                                            "type": "boolean"
                                        },
                                        "applications": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "valid": {
                                                        "type": "boolean"
                                                    },
                                                    "would_be_direct_booking": {
                                                        "type": "boolean"
                                                    },
                                                    "issues": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data or no active session"
                    }
                }
            }
        },
        "\/bookingfrontend\/checkout\/external-payment-eligibility": {
            "get": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Check eligibility for external payment methods",
                "operationId": "abaeb6cf46457639f10b8724c6d75a41",
                "responses": {
                    "200": {
                        "description": "Payment eligibility information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "eligible": {
                                            "type": "boolean"
                                        },
                                        "reason": {
                                            "type": "string"
                                        },
                                        "total_amount": {
                                            "type": "number"
                                        },
                                        "applications_count": {
                                            "type": "integer"
                                        },
                                        "payment_methods": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "logo": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No active session"
                    }
                }
            }
        },
        "\/bookingfrontend\/applications\/partials\/vipps-payment": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Initiate Vipps payment for partial applications",
                "operationId": "7f365d21998bc562a3370dcdb6aa8430",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "eventTitle",
                                    "organizerName",
                                    "contactName",
                                    "contactEmail",
                                    "contactPhone"
                                ],
                                "properties": {
                                    "eventTitle": {
                                        "type": "string"
                                    },
                                    "organizerName": {
                                        "type": "string"
                                    },
                                    "contactName": {
                                        "type": "string"
                                    },
                                    "contactEmail": {
                                        "type": "string"
                                    },
                                    "contactPhone": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vipps payment initiated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "redirect_url": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data or Vipps not available"
                    }
                }
            }
        },
        "\/bookingfrontend\/checkout\/vipps\/check-payment-status": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Check Vipps payment status and process payment",
                "operationId": "d169bbe4c0792a03ea8ea5d950ddb4c7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "payment_order_id"
                                ],
                                "properties": {
                                    "payment_order_id": {
                                        "description": "Payment order ID from Vipps",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment status check result",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "applications_approved": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid payment order ID"
                    }
                }
            }
        },
        "\/bookingfrontend\/checkout\/vipps\/payment-details\/{payment_order_id}": {
            "get": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Get Vipps payment details",
                "operationId": "247790515138d05d3f86b624b4b93bb6",
                "parameters": [
                    {
                        "name": "payment_order_id",
                        "in": "path",
                        "description": "Payment order ID from Vipps",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details from Vipps API",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                }
            }
        },
        "\/bookingfrontend\/checkout\/vipps\/cancel-payment": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Cancel Vipps payment",
                "operationId": "bf0c3c385793a7bfc71111fc937d0733",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "payment_order_id"
                                ],
                                "properties": {
                                    "payment_order_id": {
                                        "description": "Payment order ID from Vipps",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment cancellation result",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid payment order ID"
                    }
                }
            }
        },
        "\/bookingfrontend\/checkout\/vipps\/refund-payment": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Refund Vipps payment",
                "operationId": "3bdb298eb5fe009cb971fff203c07997",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "payment_order_id",
                                    "amount"
                                ],
                                "properties": {
                                    "payment_order_id": {
                                        "description": "Payment order ID from Vipps",
                                        "type": "string"
                                    },
                                    "amount": {
                                        "description": "Amount to refund in kroner (will be converted to \u00f8re)",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment refund result",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid payment order ID or amount"
                    }
                }
            }
        },
        "\/bookingfrontend\/checkout\/vipps\/post-to-accounting": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Post completed Vipps transactions to accounting system",
                "operationId": "985fe781a7c481a066d747a4d40b1f98",
                "responses": {
                    "200": {
                        "description": "Accounting posting results",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "posted_transactions": {
                                            "type": "integer"
                                        },
                                        "posted_refunds": {
                                            "type": "integer"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Accounting system error"
                    }
                }
            }
        },
        "\/bookingfrontend\/lang": {
            "get": {
                "tags": [
                    "Translation"
                ],
                "summary": "Get language settings",
                "operationId": "a895f8d701e4d31f0a3086f6de89fb4d",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "Language code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language settings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "key": {
                                            "description": "Translation key",
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Translation value",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/login": {
            "post": {
                "tags": [
                    "API"
                ],
                "summary": "Authenticate user and create session",
                "description": "Process login request",
                "operationId": "cae6706f5bc34bffc8becb14da0486ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "login": {
                                        "type": "string"
                                    },
                                    "passwd": {
                                        "type": "string"
                                    },
                                    "logindomain": {
                                        "type": "string"
                                    },
                                    "section": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "session_name": {
                                            "type": "string"
                                        },
                                        "session_id": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/refreshsession": {
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "Refresh session and verify login status",
                "description": "Refresh session information",
                "operationId": "7aa854aec3bd66534327b8909e8a5f13",
                "responses": {
                    "200": {
                        "description": "Session is valid",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "session_id": {
                                            "type": "string"
                                        },
                                        "fullname": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not logged in",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/logout": {
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "Log out current user",
                "description": "Log out a user",
                "operationId": "8ee1a271ffe281dc5850db62a3bedcea",
                "responses": {
                    "200": {
                        "description": "Logout status",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/tables": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Get a list of public tables in the database",
                "description": "This endpoint returns a list of public tables in the database, including metadata about their columns.",
                "operationId": "getTables",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "name": {
                                                "description": "Table name",
                                                "type": "string"
                                            },
                                            "columns": {
                                                "description": "Table columns",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "description": "Column name",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "Column type",
                                                            "type": "string"
                                                        },
                                                        "length": {
                                                            "description": "Column length",
                                                            "type": "integer",
                                                            "nullable": true
                                                        },
                                                        "nullable": {
                                                            "description": "Whether the column allows NULL values",
                                                            "type": "boolean"
                                                        },
                                                        "default": {
                                                            "description": "Default value for the column",
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "primary_key": {
                                                            "description": "Whether the column is a primary key",
                                                            "type": "boolean"
                                                        },
                                                        "unique_key": {
                                                            "description": "Whether the column has a unique constraint",
                                                            "type": "boolean"
                                                        },
                                                        "has_default": {
                                                            "description": "Whether the column has a default value",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/tabledata\/{table}": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Get data from a specific table",
                "description": "This endpoint returns data from a specific table in the database. The structure of the returned dataset will depend on the chosen table.",
                "operationId": "getTableData",
                "parameters": [
                    {
                        "name": "table",
                        "in": "path",
                        "description": "Table name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page. If set to a negative value, the entire dataset will be returned in one go.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation. The structure of the returned dataset will depend on the chosen table.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Array of records. The structure of each record will depend on the chosen table.",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        },
                                        "pagination": {
                                            "description": "Pagination details",
                                            "properties": {
                                                "page": {
                                                    "description": "Current page number",
                                                    "type": "integer"
                                                },
                                                "limit": {
                                                    "description": "Number of items per page",
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "description": "Total number of records",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Table not found or no records found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Table not public",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/{module}\/registry\/{type}": {
            "get": {
                "tags": [
                    "Generic Registry"
                ],
                "summary": "Get paginated list of registry items",
                "description": "Retrieve a list of registry items with pagination, filtering, and sorting",
                "operationId": "308a4c54a1708141c10331579ca5b4dd",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Module name (property, booking, rental, admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "property",
                                "booking",
                                "rental",
                                "admin"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Registry type (e.g., building, office, category)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting offset for pagination",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 50,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query for item names",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort field",
                        "schema": {
                            "type": "string",
                            "default": "id"
                        }
                    },
                    {
                        "name": "dir",
                        "in": "query",
                        "description": "Sort direction",
                        "schema": {
                            "type": "string",
                            "default": "ASC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "{field_name}",
                        "in": "query",
                        "description": "Filter by any field marked as filterable in the registry configuration. Use \/registry\/{type}\/schema to see available filter fields.",
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/RegistryListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Registry type not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Generic Registry"
                ],
                "summary": "Create new registry item",
                "description": "Create a new registry item of the specified type",
                "operationId": "549b312556eeee091250e043f62cba2a",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Module name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "property",
                                "booking",
                                "rental",
                                "admin"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Registry type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Registry item data - fields vary by registry type. See \/registry\/{type}\/schema for field definitions.",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "description": "Dynamic object with fields specific to the registry type",
                                "type": "object",
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#\/components\/schemas\/RegistryItem"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Item created successfully"
                                        },
                                        "registry_type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed or bad request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Registry type not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/{module}\/registry\/{type}\/{id}": {
            "get": {
                "tags": [
                    "Generic Registry"
                ],
                "summary": "Get single registry item by ID",
                "description": "Retrieve a specific registry item by its ID",
                "operationId": "795d20e4380f65b40dc250213e846c11",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Module name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "property",
                                "booking",
                                "rental",
                                "admin"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Registry type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Registry item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/RegistryItemResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Registry type or item not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Generic Registry"
                ],
                "summary": "Update existing registry item",
                "description": "Update an existing registry item by its ID",
                "operationId": "02d27392bc2e89db03fec18145c866cc",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Module name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "property",
                                "booking",
                                "rental",
                                "admin"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Registry type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Registry item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated registry item data - fields vary by registry type. See \/registry\/{type}\/schema for field definitions.",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "description": "Dynamic object with fields specific to the registry type",
                                "type": "object",
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#\/components\/schemas\/RegistryItem"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Item updated successfully"
                                        },
                                        "registry_type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed or bad request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Registry type or item not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Generic Registry"
                ],
                "summary": "Delete registry item",
                "description": "Delete an existing registry item by its ID",
                "operationId": "b1e5502c21c9b510a160ccd12b46563c",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Module name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "property",
                                "booking",
                                "rental",
                                "admin"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Registry type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Registry item ID to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Item deleted successfully"
                                        },
                                        "registry_type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Registry type or item not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/{module}\/registry\/types": {
            "get": {
                "tags": [
                    "Generic Registry"
                ],
                "summary": "Get available registry types for module",
                "description": "Retrieve all available registry types for the specified module",
                "operationId": "97e9f45f919f38fbb82b81342fb7a762",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Module name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "property",
                                "booking",
                                "rental",
                                "admin"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/RegistryTypesResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to detect registry class",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/{module}\/registry\/{type}\/schema": {
            "get": {
                "tags": [
                    "Generic Registry"
                ],
                "summary": "Get registry type schema",
                "description": "Retrieve field definitions, validation rules, and metadata for a registry type",
                "operationId": "e96b31280ee9f3b04997f7cf5e61a17c",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Module name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "property",
                                "booking",
                                "rental",
                                "admin"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Registry type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "type": {
                                                    "description": "Registry type key",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Human readable name",
                                                    "type": "string"
                                                },
                                                "table": {
                                                    "description": "Database table",
                                                    "type": "string"
                                                },
                                                "id_field": {
                                                    "description": "ID field configuration",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "fields": {
                                                    "description": "Field definitions",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "field_map": {
                                                    "description": "Complete field mapping",
                                                    "type": "object"
                                                },
                                                "acl_info": {
                                                    "description": "Access control information",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Registry type is required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Registry type not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/{module}\/registry\/{type}\/list": {
            "get": {
                "tags": [
                    "Generic Registry"
                ],
                "summary": "Get registry items for dropdown\/select",
                "description": "Retrieve a simplified list of registry items suitable for dropdowns and select controls",
                "operationId": "a5f62cbb0faafcf834b410467af8bc70",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Module name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "property",
                                "booking",
                                "rental",
                                "admin"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Registry type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "add_empty",
                        "in": "query",
                        "description": "Add empty '-- Select --' option",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "selected",
                        "in": "query",
                        "description": "Mark specific item as selected",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "{field_name}",
                        "in": "query",
                        "description": "Filter by any field marked as filterable in the registry configuration. Use \/registry\/{type}\/schema to see available filter fields.",
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Item ID",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "description": "Item name",
                                                        "type": "string"
                                                    },
                                                    "selected": {
                                                        "description": "Whether item is selected",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "registry_type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Registry type is required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Registry type not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Activity": {
                "title": "Activity",
                "description": "Activity model",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the activity",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the activity",
                        "type": "string",
                        "maxLength": 150
                    },
                    "parent_id": {
                        "description": "Parent activity ID",
                        "type": "integer",
                        "nullable": true
                    },
                    "active": {
                        "description": "Whether the activity is active",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AgeGroup": {
                "title": "AgeGroup",
                "description": "Age Group model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "activity_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sort": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "active": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Allocation": {
                "title": "Allocation",
                "description": "Allocation model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "active": {
                        "type": "integer"
                    },
                    "from_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "to_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "cost": {
                        "type": "number",
                        "format": "float"
                    },
                    "completed": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "building_name": {
                        "type": "string"
                    },
                    "skip_bas": {
                        "type": "integer"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Resource"
                        }
                    },
                    "type": {
                        "description": "Entity type identifier",
                        "type": "string",
                        "example": "allocation"
                    },
                    "organization_id": {
                        "type": "integer"
                    },
                    "season_id": {
                        "type": "integer"
                    },
                    "id_string": {
                        "type": "string"
                    },
                    "additional_invoice_information": {
                        "type": "string"
                    },
                    "organization_name": {
                        "type": "string"
                    },
                    "organization_shortname": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Application": {
                "title": "Application",
                "description": "Application model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "id_string": {
                        "type": "string"
                    },
                    "active": {
                        "type": "integer"
                    },
                    "display_in_dashboard": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "building_name": {
                        "type": "string"
                    },
                    "building_id": {
                        "type": "integer"
                    },
                    "frontend_modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner_id": {
                        "type": "integer"
                    },
                    "case_officer_id": {
                        "type": "integer"
                    },
                    "activity_id": {
                        "type": "integer"
                    },
                    "customer_identifier_type": {
                        "type": "string"
                    },
                    "customer_ssn": {
                        "type": "string"
                    },
                    "customer_organization_number": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizer": {
                        "type": "string"
                    },
                    "homepage": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "equipment": {
                        "type": "string"
                    },
                    "contact_name": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "agegroups": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "agegroup_id": {
                                    "type": "integer"
                                },
                                "male": {
                                    "type": "integer"
                                },
                                "female": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "audience": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "dates": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Date"
                        }
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Resource"
                        }
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Order"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Document"
                        }
                    },
                    "articles": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "Article mapping ID",
                                    "type": "integer"
                                },
                                "quantity": {
                                    "description": "Quantity ordered",
                                    "type": "integer"
                                },
                                "parent_id": {
                                    "description": "Optional parent mapping ID for sub-items",
                                    "type": "integer",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    },
                    "responsible_street": {
                        "type": "string"
                    },
                    "responsible_zip_code": {
                        "type": "string"
                    },
                    "responsible_city": {
                        "type": "string"
                    },
                    "session_id": {
                        "type": "string"
                    },
                    "agreement_requirements": {
                        "type": "string"
                    },
                    "external_archive_key": {
                        "type": "string"
                    },
                    "customer_organization_name": {
                        "type": "string"
                    },
                    "customer_organization_id": {
                        "type": "integer"
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ApplicationComment"
                        }
                    }
                },
                "type": "object"
            },
            "ApplicationComment": {
                "title": "ApplicationComment",
                "description": "Application comment model",
                "properties": {
                    "id": {
                        "description": "Comment ID",
                        "type": "integer"
                    },
                    "time": {
                        "description": "Comment creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "author": {
                        "description": "Comment author name",
                        "type": "string"
                    },
                    "comment": {
                        "description": "Comment text content",
                        "type": "string"
                    },
                    "type": {
                        "description": "Comment type",
                        "type": "string",
                        "default": "comment",
                        "enum": [
                            "comment",
                            "ownership",
                            "status"
                        ]
                    },
                    "application_id": {
                        "description": "Application ID this comment belongs to",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Article": {
                "title": "Article",
                "description": "Article model for resources and services",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "article_id": {
                        "type": "string"
                    },
                    "parent_mapping_id": {
                        "type": "integer"
                    },
                    "resource_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "tax_code": {
                        "type": "integer"
                    },
                    "tax_percent": {
                        "type": "number",
                        "format": "float"
                    },
                    "group_id": {
                        "type": "integer"
                    },
                    "article_remark": {
                        "type": "string"
                    },
                    "article_group_name": {
                        "type": "string"
                    },
                    "article_group_remark": {
                        "type": "string"
                    },
                    "ex_tax_price": {
                        "type": "number",
                        "format": "float"
                    },
                    "tax": {
                        "type": "number",
                        "format": "float"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "price_remark": {
                        "type": "string"
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "float"
                    },
                    "selected_quantity": {
                        "type": "number",
                        "format": "float"
                    },
                    "selected_sum": {
                        "type": "number",
                        "format": "float"
                    },
                    "selected_article_quantity": {
                        "type": "string"
                    },
                    "mandatory": {
                        "type": "integer"
                    },
                    "lang_unit": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Audience": {
                "title": "Audience",
                "description": "Target Audience model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "activity_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sort": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "active": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Booking": {
                "title": "Booking",
                "description": "Booking model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "active": {
                        "type": "integer"
                    },
                    "from_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "to_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "cost": {
                        "type": "number",
                        "format": "float"
                    },
                    "completed": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "building_name": {
                        "type": "string"
                    },
                    "skip_bas": {
                        "type": "integer"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Resource"
                        }
                    },
                    "type": {
                        "description": "Entity type identifier",
                        "type": "string",
                        "example": "booking"
                    },
                    "group_id": {
                        "type": "integer"
                    },
                    "allocation_id": {
                        "type": "integer"
                    },
                    "season_id": {
                        "type": "integer"
                    },
                    "activity_id": {
                        "type": "integer"
                    },
                    "reminder": {
                        "type": "integer"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "sms_total": {
                        "type": "integer"
                    },
                    "group_name": {
                        "type": "string"
                    },
                    "activity_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BookingfrontendConfig": {
                "title": "BookingfrontendConfig",
                "description": "Bookingfrontend Configuration model",
                "properties": {
                    "anonymous_passwd": {
                        "type": "string"
                    },
                    "anonymous_user": {
                        "type": "string"
                    },
                    "authentication_method": {
                        "type": "string"
                    },
                    "develope_mode": {
                        "type": "string"
                    },
                    "footer_info": {
                        "type": "string"
                    },
                    "footer_privacy_link": {
                        "type": "string"
                    },
                    "site_title": {
                        "type": "string"
                    },
                    "soap_password": {
                        "type": "string"
                    },
                    "test_ssn": {
                        "type": "string"
                    },
                    "usecookies": {
                        "type": "string"
                    },
                    "url_uustatus": {
                        "type": "string"
                    },
                    "url_system_feedback": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Building": {
                "title": "Building",
                "description": "Building model",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the building",
                        "type": "integer"
                    },
                    "town_id": {
                        "description": "Town ID associated with the building",
                        "type": "integer",
                        "nullable": true
                    },
                    "name": {
                        "description": "Name of the building",
                        "type": "string",
                        "maxLength": 150
                    },
                    "homepage": {
                        "description": "Homepage of the building",
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "description": "Contact phone number",
                        "type": "string",
                        "maxLength": 50
                    },
                    "email": {
                        "description": "Contact email",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "active": {
                        "description": "Status of the building, 1 for active, 0 for inactive",
                        "type": "integer"
                    },
                    "street": {
                        "description": "Street address of the building",
                        "type": "string",
                        "maxLength": 255
                    },
                    "zip_code": {
                        "description": "Zip code of the building",
                        "type": "string",
                        "maxLength": 255
                    },
                    "city": {
                        "description": "City where the building is located",
                        "type": "string",
                        "maxLength": 255
                    },
                    "district": {
                        "description": "District or part of town",
                        "type": "string",
                        "maxLength": 255
                    },
                    "location_code": {
                        "description": "Location code of the building",
                        "type": "string",
                        "nullable": true
                    },
                    "deactivate_calendar": {
                        "description": "Whether the calendar is deactivated, 0 or 1",
                        "type": "integer"
                    },
                    "deactivate_application": {
                        "description": "Whether applications are deactivated, 0 or 1",
                        "type": "integer"
                    },
                    "deactivate_sendmessage": {
                        "description": "Whether sending messages is deactivated, 0 or 1",
                        "type": "integer"
                    },
                    "tilsyn_name": {
                        "description": "Name of the inspector",
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "tilsyn_email": {
                        "description": "Email of the inspector",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "tilsyn_phone": {
                        "description": "Phone number of the inspector",
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "calendar_text": {
                        "description": "Text for the calendar",
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "tilsyn_name2": {
                        "description": "Second name of the inspector",
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "tilsyn_email2": {
                        "description": "Second email of the inspector",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "tilsyn_phone2": {
                        "description": "Second phone number of the inspector",
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "extra_kalendar": {
                        "description": "Whether there is an extra calendar, 0 or 1",
                        "type": "integer"
                    },
                    "activity_id": {
                        "description": "Activity ID associated with the building",
                        "type": "integer"
                    },
                    "opening_hours": {
                        "description": "Opening hours of the building",
                        "type": "string",
                        "nullable": true
                    },
                    "description_json": {
                        "description": "Description in JSON format",
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CompletedReservation": {
                "title": "CompletedReservation",
                "description": "CompletedReservation model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "reservation_type": {
                        "type": "string",
                        "maxLength": 70
                    },
                    "reservation_id": {
                        "type": "integer"
                    },
                    "season_id": {
                        "type": "integer"
                    },
                    "cost": {
                        "type": "number",
                        "format": "float"
                    },
                    "from_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "to_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "organization_id": {
                        "type": "integer"
                    },
                    "customer_type": {
                        "type": "string",
                        "maxLength": 70
                    },
                    "customer_organization_number": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "customer_ssn": {
                        "type": "string",
                        "maxLength": 12
                    },
                    "description": {
                        "type": "string"
                    },
                    "building_name": {
                        "type": "string"
                    },
                    "article_description": {
                        "type": "string",
                        "maxLength": 35
                    },
                    "building_id": {
                        "type": "integer"
                    },
                    "exported": {
                        "type": "integer"
                    },
                    "customer_identifier_type": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "export_file_id": {
                        "type": "integer"
                    },
                    "invoice_file_order_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "customer_number": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Delegate": {
                "title": "Delegate",
                "description": "Delegate model",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "org_id": {
                        "type": "number"
                    },
                    "organization_number": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Document": {
                "title": "Document",
                "description": "Document model representing images and other files",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "picture",
                            "regulation",
                            "HMS_document",
                            "picture_main",
                            "drawing",
                            "price_list",
                            "other"
                        ]
                    },
                    "owner_id": {
                        "type": "integer"
                    },
                    "owner_type": {
                        "type": "string",
                        "enum": [
                            "building",
                            "resource",
                            "application"
                        ]
                    }
                },
                "type": "object"
            },
            "Event": {
                "title": "Event",
                "description": "Event model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "active": {
                        "type": "integer"
                    },
                    "from_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "to_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "cost": {
                        "type": "number",
                        "format": "float"
                    },
                    "completed": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "building_name": {
                        "type": "string"
                    },
                    "skip_bas": {
                        "type": "integer"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Resource"
                        }
                    },
                    "type": {
                        "description": "Entity type identifier",
                        "type": "string",
                        "example": "event"
                    },
                    "activity_id": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "contact_name": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "reminder": {
                        "type": "integer"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "customer_identifier_type": {
                        "type": "string"
                    },
                    "customer_organization_number": {
                        "type": "string"
                    },
                    "customer_ssn": {
                        "type": "string"
                    },
                    "customer_internal": {
                        "type": "integer"
                    },
                    "is_public": {
                        "type": "integer"
                    },
                    "customer_organization_id": {
                        "type": "integer"
                    },
                    "customer_organization_name": {
                        "type": "string"
                    },
                    "id_string": {
                        "type": "string"
                    },
                    "building_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizer": {
                        "type": "string"
                    },
                    "homepage": {
                        "type": "string"
                    },
                    "equipment": {
                        "type": "string"
                    },
                    "access_requested": {
                        "type": "integer"
                    },
                    "participant_limit": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MultiDomain": {
                "title": "MultiDomain",
                "description": "Multi Domain model",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the multi domain",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the domain",
                        "type": "string",
                        "maxLength": 200
                    },
                    "webservicehost": {
                        "description": "Web service host URL",
                        "type": "string",
                        "nullable": true
                    },
                    "user_id": {
                        "description": "User ID who created this domain",
                        "type": "integer",
                        "nullable": true
                    },
                    "entry_date": {
                        "description": "Entry date as timestamp",
                        "type": "integer",
                        "nullable": true
                    },
                    "modified_date": {
                        "description": "Modified date as timestamp",
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Order model",
                "properties": {
                    "order_id": {
                        "type": "integer"
                    },
                    "sum": {
                        "type": "number",
                        "format": "float"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/OrderLine"
                        }
                    }
                },
                "type": "object"
            },
            "OrderLine": {
                "title": "OrderLine",
                "description": "OrderLine model",
                "properties": {
                    "order_id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "parent_mapping_id": {
                        "type": "integer"
                    },
                    "article_mapping_id": {
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "float"
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "float"
                    },
                    "overridden_unit_price": {
                        "type": "number",
                        "format": "float"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "tax_code": {
                        "type": "integer"
                    },
                    "tax": {
                        "type": "number",
                        "format": "float"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Organization": {
                "title": "Organization",
                "description": "Organization model",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the organization",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the organization",
                        "type": "string",
                        "maxLength": 150
                    },
                    "organization_number": {
                        "description": "Organization number",
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "homepage": {
                        "description": "Homepage of the organization",
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "description": "Phone number of the organization",
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "email": {
                        "description": "Email of the organization",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "co_address": {
                        "description": "Care of address",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "street": {
                        "description": "Street address",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "zip_code": {
                        "description": "Zip code",
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "district": {
                        "description": "District",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "activity_id": {
                        "description": "Activity ID",
                        "type": "integer",
                        "nullable": true
                    },
                    "show_in_portal": {
                        "description": "Whether to show in portal",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Resource": {
                "title": "Resource",
                "description": "Resource model",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the resource",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the resource",
                        "type": "string",
                        "maxLength": 150
                    },
                    "activity_id": {
                        "description": "Activity ID associated with the resource",
                        "type": "integer",
                        "nullable": true
                    },
                    "active": {
                        "description": "Whether the resource is active",
                        "type": "integer"
                    },
                    "sort": {
                        "description": "Sort order of the resource",
                        "type": "integer",
                        "nullable": true
                    },
                    "organizations_ids": {
                        "description": "IDs of organizations associated with the resource",
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "json_representation": {
                        "description": "JSON representation of the resource",
                        "type": "object",
                        "nullable": true
                    },
                    "rescategory_id": {
                        "description": "Resource category ID",
                        "type": "integer",
                        "nullable": true
                    },
                    "opening_hours": {
                        "description": "Opening hours of the resource",
                        "type": "string",
                        "nullable": true
                    },
                    "contact_info": {
                        "description": "Contact information for the resource",
                        "type": "string",
                        "nullable": true
                    },
                    "direct_booking": {
                        "description": "Direct booking information",
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "booking_day_default_lenght": {
                        "description": "Default booking length in days",
                        "type": "integer",
                        "nullable": true
                    },
                    "booking_dow_default_start": {
                        "description": "Default start day of week for booking",
                        "type": "integer",
                        "nullable": true
                    },
                    "booking_time_default_start": {
                        "description": "Default start time for booking",
                        "type": "integer",
                        "nullable": true
                    },
                    "booking_time_default_end": {
                        "description": "Default end time for booking",
                        "type": "integer",
                        "nullable": true
                    },
                    "simple_booking": {
                        "description": "Whether simple booking is enabled",
                        "type": "integer",
                        "nullable": true
                    },
                    "direct_booking_season_id": {
                        "description": "Direct booking season ID",
                        "type": "integer",
                        "nullable": true
                    },
                    "simple_booking_start_date": {
                        "description": "Start date for simple booking",
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "simple_booking_end_date": {
                        "description": "End date for simple booking",
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "booking_month_horizon": {
                        "description": "Booking month horizon",
                        "type": "integer",
                        "nullable": true
                    },
                    "booking_day_horizon": {
                        "description": "Booking day horizon",
                        "type": "integer",
                        "nullable": true
                    },
                    "capacity": {
                        "description": "Capacity of the resource",
                        "type": "integer",
                        "nullable": true
                    },
                    "participant_limit": {
                        "description": "Current participant limit of the resource",
                        "type": "integer",
                        "nullable": true
                    },
                    "deactivate_calendar": {
                        "description": "Whether the calendar is deactivated",
                        "type": "integer"
                    },
                    "deactivate_application": {
                        "description": "Whether the application is deactivated",
                        "type": "integer"
                    },
                    "booking_time_minutes": {
                        "description": "Booking time in minutes",
                        "type": "integer",
                        "nullable": true
                    },
                    "booking_limit_number": {
                        "description": "Booking limit number",
                        "type": "integer",
                        "nullable": true
                    },
                    "booking_limit_number_horizont": {
                        "description": "Booking limit number horizon",
                        "type": "integer",
                        "nullable": true
                    },
                    "hidden_in_frontend": {
                        "description": "Whether the resource is hidden in frontend",
                        "type": "integer",
                        "nullable": true
                    },
                    "activate_prepayment": {
                        "description": "Whether prepayment is activated",
                        "type": "integer",
                        "nullable": true
                    },
                    "booking_buffer_deadline": {
                        "description": "Booking buffer deadline",
                        "type": "integer",
                        "nullable": true
                    },
                    "description_json": {
                        "description": "Description in JSON format",
                        "type": "object",
                        "nullable": true
                    },
                    "deny_application_if_booked": {
                        "description": "Whether to deny application if resource is already booked",
                        "type": "integer",
                        "nullable": true
                    },
                    "building_id": {
                        "description": "ID of the building this resource belongs to",
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Season": {
                "title": "Season",
                "description": "Season model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "building_id": {
                        "type": "integer"
                    },
                    "from_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "to_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "active": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "wday": {
                        "type": "integer"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Resource"
                        }
                    },
                    "boundaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SeasonBoundary"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "Expanded User model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ssn": {
                        "type": "string"
                    },
                    "orgnr": {
                        "type": "string"
                    },
                    "orgname": {
                        "type": "string"
                    },
                    "customer_number": {
                        "type": "string"
                    },
                    "org_id": {
                        "type": "integer"
                    },
                    "is_logged_in": {
                        "type": "boolean"
                    },
                    "homepage": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "street": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "delegates": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Delegate"
                        }
                    }
                },
                "type": "object"
            },
            "Date": {
                "title": "Date",
                "description": "Date model for application",
                "properties": {
                    "from_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "to_": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RegistryItem": {
                "description": "Registry item with dynamic fields based on registry type configuration. Only the 'id' field is guaranteed to be present.",
                "properties": {
                    "id": {
                        "description": "Registry item ID (always present)",
                        "type": "integer"
                    }
                },
                "type": "object",
                "additionalProperties": {
                    "description": "Additional fields are defined per registry type. See \/registry\/{type}\/schema endpoint for specific field definitions.",
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "RegistryType": {
                "properties": {
                    "type": {
                        "description": "Registry type key",
                        "type": "string"
                    },
                    "name": {
                        "description": "Human readable name",
                        "type": "string"
                    },
                    "table": {
                        "description": "Database table name",
                        "type": "string"
                    },
                    "acl_location": {
                        "description": "ACL location string",
                        "type": "string"
                    },
                    "fields": {
                        "description": "Field definitions",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "RegistryListResponse": {
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RegistryItem"
                        }
                    },
                    "total": {
                        "description": "Total number of items",
                        "type": "integer"
                    },
                    "start": {
                        "description": "Starting offset",
                        "type": "integer"
                    },
                    "limit": {
                        "description": "Items per page",
                        "type": "integer"
                    },
                    "registry_type": {
                        "description": "Registry type",
                        "type": "string"
                    },
                    "registry_name": {
                        "description": "Registry display name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegistryItemResponse": {
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/RegistryItem"
                    },
                    "registry_type": {
                        "type": "string"
                    },
                    "registry_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegistryTypesResponse": {
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RegistryType"
                        }
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "description": "Error message",
                        "type": "string"
                    },
                    "errors": {
                        "description": "Validation errors (if applicable)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "session_auth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionphpgwsessid"
            }
        }
    },
    "tags": [
        {
            "name": "User",
            "description": "API Endpoints for User"
        },
        {
            "name": "Buildings",
            "description": "API Endpoints for Buildings"
        },
        {
            "name": "CompletedReservations",
            "description": "API Endpoints for Completed Reservations"
        },
        {
            "name": "Events",
            "description": "API Endpoints for Events"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for authentication"
        },
        {
            "name": "MultiDomain",
            "description": "API Endpoints for Multi Domain values"
        },
        {
            "name": "Organizations",
            "description": "API Endpoints for Organizations"
        },
        {
            "name": "Resources",
            "description": "API Endpoints for Resources"
        },
        {
            "name": "Schedule Entities",
            "description": "API Endpoints for Schedule Entities (Events, Allocations, Bookings)"
        },
        {
            "name": "Version",
            "description": "API Endpoints for version settings"
        },
        {
            "name": "Applications",
            "description": "API Endpoints for Applications"
        },
        {
            "name": "Checkout",
            "description": "API Endpoints for Application Checkout and Payment"
        },
        {
            "name": "Generic Registry",
            "description": "Generic registry operations for all modules (property, booking, rental, admin)"
        },
        {
            "name": "Towns",
            "description": "Towns"
        },
        {
            "name": "Search Data",
            "description": "Search Data"
        },
        {
            "name": "Translation",
            "description": "Translation"
        },
        {
            "name": "API",
            "description": "API"
        },
        {
            "name": "Database",
            "description": "Database"
        }
    ]
}