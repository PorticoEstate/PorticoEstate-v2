@import 'variables';


.tableContainer {
    display: flex;
    flex-direction: column;
    width: 100%;
    padding-top: 1rem;
}

.table {
    display: grid;
    width: 100%;
    padding-bottom: 1rem;

    //gap: 0 0.5rem;


    // Add zebra striping

    .tableRow {
        > *:not(:global(.closed)) {
            &.centerCol, &.tableHeaderCol {
                border-bottom: var(--ds-border-width-default) solid var(--ds-color-neutral-border-subtle);
                padding-top: 0.5rem;
                padding-right: 0.25rem;
                padding-left: 0.25rem;
                padding-bottom: 0.5rem;
            }
        }



        //> .centerCol:first-child {
        //    padding-left: 0.5rem;
        //}
        //> .centerCol:last-child {
        //    padding-right: 0.5rem;
        //}

        &:not(.tableHeader) {
            > * {
                background-color: var(--dsc-table-background);
            }
            &:nth-child(odd) > * {
                /* Apply background color here */
                background-color: var(--ds-color-neutral-background-subtle);
            }
        }


    }
    @include smallmode {
        padding-left: 1rem;
        padding-right: 1rem;
    }

    input[type="checkbox"] {
        width: 1rem;
        height: 1rem;
        cursor: pointer;

        &:disabled {
            cursor: not-allowed;
            opacity: 0.5;
        }
    }

    .tableRow {
        //display: grid;

        div {
            display: flex;
        }


        .columnName {
            @include bigmode {
                display: none;
            }
        }
        .centerCol {
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
            @include smallmode {
                grid-column: span 2;
                flex-direction: column;
            }
            @include bigmode {
                display: flex;
                justify-content: center;
                align-items: center;
            }
            &.bigCol {
                @include smallmode {
                    grid-column: 1/5;
                }
            }
        }
    }

    .tableHeader,
    .tableRowContainer {
        display: contents;
        //padding-bottom: 0.875rem;
        //min-height: 3.125rem;
        //border-bottom: var(--ds-border-width-default) solid var(--ds-color-neutral-border-subtle);

    }




    .tableRow {
        gap: 0.5rem;
        @include smallmode {
            grid-template-columns: 1fr 1fr 1fr 1fr !important; // important because overwrites inline styles
        }
    }

    .tableHeaderSmall {
        @include bigmode {
            display: none;
        }

        .tableHeaderCol {
            display: grid;
            align-content: center;
            grid-template-columns: 1fr auto;
            margin: 0 1rem;
            div,
            button {
                display: flex;
                align-items: center;
            }
        }
    }

    .tableHeaderBig {
        gap: 0.5rem;
        @include smallmode {
            display: none;
        }
        div {
            display: flex;
        }

        //@include heading-s;
        margin:0;
    }

    button {
        align-items: center;

        display: flex;
        background: inherit;
        color: inherit;
        border: none;
        padding: 0;
        font: inherit;
        outline: inherit;
        gap: 0.5rem
    }
    .tableHeaderCol {
        //justify-content: center;
        align-items: center;
        gap: 0.5rem;
        overflow: hidden;
        &.clickable {
            user-select: none;
        }
        .capitalize {
            //text-transform: capitalize;
            text-overflow: ellipsis;
            overflow: hidden;

            //padding-right: 1rem;
        }
    }
}
.clickable {
    cursor: pointer;
}

.notClickable {
    display: flex;
    //flex-direction: column;
    //justify-content: center;
    cursor: default;
}

.actionColumn {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 1rem;
    min-width: 4rem; // Maintain consistent width with expand button
}
.expandedContent {
    grid-area: content;  // Places this element in the "content" grid area
    width: 100%;         // Ensures it takes full width
    background: var(--ds-color-neutral-background-subtle);
    margin-top: 0.5rem;  // Space between row and expanded content
    border-radius: 4px;
    overflow: hidden;    // In case of dynamic content
    transition: all 0.2s ease;  // Smooth transitions for height changes
}