@import 'variables';


.tableContainer {
    display: flex;
    flex-direction: column;
    width: 100%;
    padding-top: 1rem;

    &[data-is-mobile="true"] {
        .table {
            padding-left: 0;
            padding-right: 0;
        }
    }
}

.tableMobile {
    display: block !important; // Changed from flex to block

    > div {  // Target the row containers
        display: grid;
        margin-bottom: 1rem;
        //padding: 1rem;
        background-color: var(--ds-color-neutral-background);
        border-radius: 8px;
        //box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);

        /* Make the grid layout simple and reliable */
        .centerCol {
            display: flex;
            flex-direction: column;
        }

        &:nth-child(odd) {
            background-color: var(--ds-color-neutral-background-tinted);
        }

        &:not(:last-child) {
            margin-bottom: 1rem;
        }
    }
}

.table {
    display: grid;
    width: 100%;
    padding-bottom: 1rem;

    //gap: 0 0.5rem;


    // Add zebra striping

    .tableRow {
        > *:not(:global(.closed)) {
            &.centerCol, &.tableHeaderCol {
                //border-bottom: var(--ds-border-width-default) solid var(--ds-color-neutral-border-subtle);
                padding-top: 0.5rem;
                padding-right: 0.25rem;
                padding-left: 0.25rem;
                padding-bottom: 0.5rem;
            }
        }



        //> .centerCol:first-child {
        //    padding-left: 0.5rem;
        //}
        //> .centerCol:last-child {
        //    padding-right: 0.5rem;
        //}

        &:not(.tableHeader) {
            > * {
                background-color: var(--dsc-table-background);
            }
            &:nth-child(odd) > * {
                /* Apply background color here */
                background-color: var(--ds-color-neutral-background-tinted);
            }
        }


    }
    // Removed padding from mobile view

    input[type="checkbox"] {
        width: 1rem;
        height: 1rem;
        cursor: pointer;

        &:disabled {
            cursor: not-allowed;
            opacity: 0.5;
        }
    }

    .tableRow {
        //display: grid;

        div {
            display: flex;
        }


        .columnName {
            @include bigmode {
                display: none;
            }
        }
        .centerCol {
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;

            // Special styling for selection checkbox on mobile
            &[id*="select"] {
                align-items: center !important;
                justify-content: center !important;
                padding: 0.5rem 0;
                display: flex;

                input[type="checkbox"] {
                    margin: 0;
                    width: 1.25rem;
                    height: 1.25rem;
                }
            }

            .columnName {
                margin-bottom: 0.25rem;
                font-weight: bold;
                font-size: 0.875rem;
                color: var(--ds-color-neutral-text-moderate);
            }

            @include bigmode {
                display: flex;
                justify-content: center;
                align-items: center;
            }
        }
    }

    .tableHeader,
    .tableRowContainer {
        display: contents;
        //padding-bottom: 0.875rem;
        //min-height: 3.125rem;
        //border-bottom: var(--ds-border-width-default) solid var(--ds-color-neutral-border-subtle);

    }




    .tableRow {
        gap: 0.5rem;
        @include smallmode {
            // Mobile mode grid columns are now handled by data-is-mobile in the parent container
        }
    }

    .tableHeaderSmall {
        @include bigmode {
            display: none;
        }

        .tableHeaderCol {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin: 0 1rem;
            padding: 1rem 0;
            position: relative;
            //border-bottom: var(--ds-border-width-default) solid var(--ds-color-neutral-border-subtle);

            .sortSelectField {
                flex: 1;
                margin-bottom: 0;

                :global(.digdir-select) {
                    margin-top: 0;

                    &:focus-within {
                        box-shadow: none;
                    }
                }

                :global(.digdir-field__label) {
                    margin-bottom: 0.5rem;
                }
            }

            .sortToggleButton {
                background: none;
                border: none;
                cursor: pointer;
                display: flex;
                align-items: center;
                justify-content: center;
                margin-left: 0.5rem;
                padding: 0.5rem;

                &:hover {
                    background-color: var(--ds-color-neutral-background-tinted);
                    border-radius: 4px;
                }
            }

            /* Removed inlineSort class as we're no longer using it */
        }
    }

    .tableHeaderBig {
        gap: 0.5rem;
        // We don't need this media query anymore since we're using the isMobile prop
        // @include smallmode {
        //     display: none;
        // }
        div {
            display: flex;
        }

        //@include heading-s;
        margin:0;
    }

    button {
        align-items: center;

        display: flex;
        background: inherit;
        color: inherit;
        border: none;
        padding: 0;
        font: inherit;
        outline: inherit;
        gap: 0.5rem
    }
    .tableHeaderCol {
        //justify-content: center;
        align-items: center;
        gap: 0.5rem;
        overflow: hidden;
        &.clickable {
            user-select: none;
        }
        .capitalize {
            //text-transform: capitalize;
            text-overflow: ellipsis;
            overflow: hidden;

            //padding-right: 1rem;
        }
    }
}
.clickable {
    cursor: pointer;
}

.notClickable {
    display: flex;
    //flex-direction: column;
    //justify-content: center;
    cursor: default;
}

.actionColumn {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 1rem;
    min-width: 4rem; // Maintain consistent width with expand button
}
.expandedContent {
    grid-area: content;  // Places this element in the "content" grid area
    width: 100%;         // Ensures it takes full width
    background: var(--ds-color-neutral-background-tinted);
    margin-top: 0.5rem;  // Space between row and expanded content
    border-radius: 4px;
    overflow: hidden;    // In case of dynamic content
    transition: all 0.2s ease;  // Smooth transitions for height changes
}

.loadingContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2rem;
    grid-column: 1 / -1; // Span all columns
    
    .loadingText {
        color: var(--ds-color-neutral-text-moderate);
        font-style: italic;
    }
}